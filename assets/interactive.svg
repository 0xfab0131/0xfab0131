<?xml version="1.0" encoding="UTF-8"?>
<svg xmlns="http://www.w3.org/2000/svg"
     xmlns:xlink="http://www.w3.org/1999/xlink"
     version="1.1" baseProfile="full"
     viewBox="0 0 800 1500"
     preserveAspectRatio="xMidYMid meet"
     width="800" height="1500">

  <style type="text/css"><![CDATA[
    /* 背景アニメーション */
    @keyframes bgScroll {
      from { background-position:   0 0; }
      to   { background-position: -800px 0; }
    }
    svg {
      background: linear-gradient(90deg, #1e3a8a, #2563eb, #1e40af);
      background-size: 1600px 100%;
      animation: bgScroll 10s linear infinite;
    }
    /* 埋め込み HTML の基本整形 */
    body {
      margin: 0;
      padding: 16px;
      font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI',
                   Roboto, Oxygen, Ubuntu, Cantarell,
                   'Open Sans', 'Helvetica Neue', sans-serif;
      color: #fff;
      background: transparent;
    }
    h1, h2, h3 { margin: 20px 0 12px 0; }
    h2 {
      padding-bottom: 8px;
      border-bottom: 1px solid rgba(255, 255, 255, 0.3);
      margin-top: 30px;
    }
    ul { margin: 0 0 24px 20px; padding: 0; }
    p { margin: 12px 0 24px 0; }
    img { max-width: 100%; height: auto; vertical-align: middle; }
    a { color: inherit; text-decoration: none; }
    .center { text-align: center; }
    .flex-center { 
      display: flex; 
      align-items: center; 
      justify-content: center;
      flex-wrap: wrap;
      gap: 12px;
      margin-bottom: 24px;
    }
    .badge-row { 
      margin: 16px 0 24px 0;
    }
    .badge-row img { 
      margin: 4px; 
    }
    .stats-card {
      height: 170px !important;
      width: auto;
    }
    .stats-section {
      margin-bottom: 30px;
    }
  ]]></style>

  <foreignObject x="0" y="0" width="800" height="1500">
    <body xmlns="http://www.w3.org/1999/xhtml">
      <script type="text/javascript">
      /* <![CDATA[ */
        // Asset URL cache
        let assetCache = {};
        
        // Function to request an asset URL from the parent page
        function getAssetUrl(assetKey) {
          return new Promise((resolve, reject) => {
            // Check if URL is already in cache
            if (assetCache[assetKey]) {
              resolve(assetCache[assetKey]);
              return;
            }
            
            // Set up a listener for the response
            const messageHandler = (event) => {
              if (event.data && event.data.type === 'assetUrlResponse' && event.data.assetKey === assetKey) {
                // Remove the event listener to avoid memory leaks
                window.removeEventListener('message', messageHandler);
                
                if (event.data.assetUrl) {
                  // Cache the URL for future use
                  assetCache[assetKey] = event.data.assetUrl;
                  resolve(event.data.assetUrl);
                } else {
                  console.error(`Asset URL not received for key: ${assetKey}`);
                  // Optionally reject or resolve with a default/placeholder URL
                  // reject(new Error(`Asset URL not found for key: ${assetKey}`)); 
                   resolve(''); // Resolve with empty string to avoid breaking image elements
                }
              }
            };
            
            // Listen for the response
            window.addEventListener('message', messageHandler);
            
            // Send request to parent page
            try {
               window.parent.postMessage({
                 type: 'getAssetUrl',
                 assetKey: assetKey
               }, '*'); // Consider specifying the target origin instead of '*' for security
            } catch(e) {
               console.error("postMessage failed: ", e);
               window.removeEventListener('message', messageHandler); // Clean up listener
               reject(new Error('Could not communicate with parent window'));
            }
            
            // Set a timeout in case the parent doesn't respond
            setTimeout(() => {
              window.removeEventListener('message', messageHandler);
              // Avoid rejecting here if we already resolved with empty string or if still waiting
              if (!assetCache[assetKey]) {
                 console.warn(`Timeout getting asset URL for key: ${assetKey}`);
                 resolve(''); // Resolve with empty string on timeout
              }
            }, 5000); // 5 second timeout
          });
        }
        
        // Function to update an image element with the correct URL
        async function updateImageElement(elementId, assetKey) {
          try {
            const url = await getAssetUrl(assetKey);
            const element = document.getElementById(elementId);
            if (element) {
              if (url) {
                 element.setAttribute('src', url);
              } else {
                 // Handle cases where URL is empty (e.g., hide element or show placeholder)
                 console.warn(`No URL found for ${elementId} (${assetKey})`);
                 // element.style.display = 'none'; // Option: hide the element
              }
            }
          } catch (error) {
            console.error(`Failed to update image ${elementId}:`, error);
          }
        }
        
        // Initialize all assets once the body is loaded
        window.onload = () => {
          updateImageElement('profile-view-img', 'profileViews');
          updateImageElement('github-followers-img', 'githubFollowers');
          updateImageElement('welcome-gif', 'welcomeGif');
          updateImageElement('react-img', 'react');
          updateImageElement('nextjs-img', 'nextjs');
          updateImageElement('typescript-img', 'typescript');
          updateImageElement('javascript-img', 'javascript');
          updateImageElement('threejs-img', 'threejs');
          updateImageElement('tailwind-img', 'tailwind');
          updateImageElement('materialui-img', 'materialui');
          updateImageElement('astro-img', 'astro');
          updateImageElement('nodejs-img', 'nodejs');
          updateImageElement('go-img', 'go');
          updateImageElement('python-img', 'python');
          updateImageElement('csharp-img', 'csharp');
          updateImageElement('dotnet-img', 'dotnet');
          updateImageElement('docker-img', 'docker');
          updateImageElement('kubernetes-img', 'kubernetes');
          updateImageElement('graphql-img', 'graphql');
          updateImageElement('postgresql-img', 'postgresql');
          updateImageElement('aws-img', 'aws');
          updateImageElement('azure-img', 'azure');
          updateImageElement('gcp-img', 'gcp');
          updateImageElement('github-actions-img', 'githubActions');
          updateImageElement('vercel-img', 'vercel');
          updateImageElement('firebase-img', 'firebase');
          updateImageElement('supabase-img', 'supabase');
          updateImageElement('cloudflare-img', 'cloudflare');
          updateImageElement('github-stats-img', 'githubStats');
          updateImageElement('top-langs-img', 'topLanguages');
          updateImageElement('streak-stats-img', 'streakStats');
          updateImageElement('twitter-img', 'twitter');
          updateImageElement('github-img', 'github');
        };
      /* ]]> */
      </script>
      
      <!-- 1. プロフィールビュー・フォロワー -->
      <div class="center">
        <img id="profile-view-img" alt="Profile views" src=""/>
        <a href="https://github.com/0xfab0131?tab=followers">
          <img id="github-followers-img" alt="GitHub followers" src=""/>
        </a>
      </div>

      <!-- 2. ウェルカム見出し -->
      <h1 class="flex-center">
        <img id="welcome-gif" width="28" height="28" alt="Welcome GIF" src=""/>
        <span style="margin-left:8px;">Welcome to my profile!</span>
      </h1>

      <!-- 3. About Me -->
      <h2>👨‍💻 About Me</h2>
      <ul>
        <li>🧑‍💻 Full Stack Engineer with a passion for creating user-friendly applications</li>
        <li>🚀 Currently focusing on cloud-native architecture and microservices</li>
        <li>🔭 Working on building innovative services and solutions</li>
        <li>🌱 Learning more about AI/ML integration in web applications</li>
        <li>💡 Interested in open source contribution and community projects</li>
      </ul>

      <!-- 4. Skills and Technologies -->
      <h2>🛠️ Skills and Technologies</h2>

      <h3>Frontend</h3>
      <p class="badge-row">
        <img id="react-img" alt="React" src=""/>
        <img id="nextjs-img" alt="Next.js" src=""/>
        <img id="typescript-img" alt="TypeScript" src=""/>
        <img id="javascript-img" alt="JavaScript" src=""/>
        <img id="threejs-img" alt="Three.js" src=""/>
        <img id="tailwind-img" alt="Tailwind CSS" src=""/>
        <img id="materialui-img" alt="Material UI" src=""/>
        <img id="astro-img" alt="Astro" src=""/>
      </p>

      <h3>Backend and Infrastructure</h3>
      <p class="badge-row">
        <img id="nodejs-img" alt="Node.js" src=""/>
        <img id="go-img" alt="Go" src=""/>
        <img id="python-img" alt="Python" src=""/>
        <img id="csharp-img" alt="C#" src=""/>
        <img id="dotnet-img" alt=".NET" src=""/>
        <img id="docker-img" alt="Docker" src=""/>
        <img id="kubernetes-img" alt="Kubernetes" src=""/>
        <img id="graphql-img" alt="GraphQL" src=""/>
        <img id="postgresql-img" alt="PostgreSQL" src=""/>
      </p>

      <!-- 5. Cloud and DevOps -->
      <h3>Cloud and DevOps</h3>
      <p class="badge-row">
        <img id="aws-img" alt="AWS" src=""/>
        <img id="azure-img" alt="Azure" src=""/>
        <img id="gcp-img" alt="GCP" src=""/>
        <img id="github-actions-img" alt="GitHub Actions" src=""/>
        <img id="vercel-img" alt="Vercel" src=""/>
        <img id="firebase-img" alt="Firebase" src=""/>
        <img id="supabase-img" alt="Supabase" src=""/>
        <img id="cloudflare-img" alt="Cloudflare" src=""/>
      </p>

      <!-- 6. Featured Projects -->
      <h2>📂 Featured Projects</h2>
      <p>Coming soon…</p>

      <!-- 7. GitHub Stats -->
      <h2>📊 GitHub Stats</h2>
      <div class="center flex-center stats-section">
        <img id="github-stats-img" alt="GitHub Stats" class="stats-card" src=""/>
        <img id="top-langs-img" alt="Top Languages" class="stats-card" src=""/>
      </div>
      <div class="center stats-section">
        <img id="streak-stats-img" alt="GitHub Streak Stats" src=""/>
      </div>

      <!-- 8. Connect with Me -->
      <h2>📫 Connect with Me</h2>
      <div class="center">
        <a href="https://twitter.com/fab_for_fab">
          <img id="twitter-img" alt="Twitter" src=""/>
        </a>
        <a href="https://github.com/0xfab0131">
          <img id="github-img" alt="GitHub" src=""/>
        </a>
      </div>
    </body>
  </foreignObject>
</svg> 